/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * The version of the OpenAPI document: 2.17.0
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DestinyHistoricalStatsDestinyPlayerBungieNetUserInfo } from './destinyHistoricalStatsDestinyPlayerBungieNetUserInfo';
import { DestinyHistoricalStatsDestinyPlayer } from './destinyHistoricalStatsDestinyPlayer';
import { DestinyHistoricalStatsDestinyPlayerDestinyUserInfo } from './destinyHistoricalStatsDestinyPlayerDestinyUserInfo';


/**
 * Identity details of the player
 */
export interface DestinyHistoricalStatsDestinyPostGameCarnageReportEntryPlayer { 
    destinyUserInfo?: DestinyHistoricalStatsDestinyPlayerDestinyUserInfo;
    /**
     * Class of the character if applicable and available.
     */
    characterClass?: string;
    classHash?: number;
    raceHash?: number;
    genderHash?: number;
    /**
     * Level of the character if available. Zero if it is not available.
     */
    characterLevel?: number;
    /**
     * Light Level of the character if available. Zero if it is not available.
     */
    lightLevel?: number;
    bungieNetUserInfo?: DestinyHistoricalStatsDestinyPlayerBungieNetUserInfo;
    /**
     * Current clan name for the player. This value may be null or an empty string if the user does not have a clan.
     */
    clanName?: string;
    /**
     * Current clan tag for the player. This value may be null or an empty string if the user does not have a clan.
     */
    clanTag?: string;
    /**
     * If we know the emblem\'s hash, this can be used to look up the player\'s emblem at the time of a match when receiving PGCR data, or otherwise their currently equipped emblem (if we are able to obtain it).
     */
    emblemHash?: number;
}

